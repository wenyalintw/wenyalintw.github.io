[{"authors":["admin"],"categories":null,"content":"目前就讀於臺灣大學機械工程研究所的碩士生，興趣包括但不限於影像處理、人工智慧和物聯網等領域。當前研究專注於AI於醫學影像之應用。\n對任何工作、研究機會抱持開放態度，歡迎隨時來信交流！\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"zh-hant","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://wenyalintw.github.io/zh-hant/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/zh-hant/authors/admin/","section":"authors","summary":"目前就讀於臺灣大學機械工程研究所的碩士生，興趣包括但不限於影像處理、人工智慧和物聯網等領域。當前研究專注於AI於醫學影像之應用。 對任何工作、","tags":null,"title":"Wen-Ya Lin","type":"authors"},{"authors":null,"categories":null,"content":" Webaholic Reminder ––––– Chrome Extension ––––– Remind you to work when you spend too much time on the internet.  Currently available on Chrome Web Store.  Table of contents  Application Demo Introduction Getting Started Acknowledgments  Application Demo Webaholic Reminder – Demo (YouTube)  Introduction Are you a Webaholic? If the answer is yes, this extension will help you quit \"web-addiction\" by two steps:\n Set Sites \u0026amp; Timeout Annoying Reminding  Set Sites \u0026amp; Timeout  Set sites you are addicted to in regex expression (ex: youtube.com, reddit, https://facebook.com/*) Set timeout and idle time Extension will count the time you spend on site if current url match the regex you set Timer will pause if you go idle after \"Idle Time\"  ＊＊＊ Important ＊＊＊\n All settings (including ON-OFF switch) will only apply to new page (including reload) Existed page comply with old settings Disambiguation - If browser \"load\" a page after setting, it is a new page  Annoying Reminding  Extension will remind you on \"Timeout\" You've got to choose stop wasting time or not   If you click \"Cancel\", extension will remind you after another timeout   If you click \"OK\", extension will close the tab for you  Getting Started For User  Just click HERE to install it  For Developer  Clone the repo  git clone https://github.com/wenyalintw/Webaholic-Reminder.git   Go to chrome://extensions/ and click Load unpacked to load /src Play around with the code ⇄ reload  Acknowledgments  Timing function borrow and modified from jasonzissman's repo: TimeMe.js Reference of apperance design - Adblock Plus / Google Translate / FREE FRONTEND / FVM / CodePen  MIT License (2019), Wen-Ya Lin ","date":1570233600,"expirydate":-62135596800,"kind":"page","lang":"zh-hant","lastmod":1570233600,"objectID":"6c4841a02fb9f921e0a747e68f9721bb","permalink":"https://wenyalintw.github.io/zh-hant/project/webaholic-reminder/","publishdate":"2019-10-05T00:00:00Z","relpermalink":"/zh-hant/project/webaholic-reminder/","section":"project","summary":"用來戒斷對特定網站成癮之Chrome瀏覽器擴充程式。","tags":["Web","JavaScript","HTML","CSS"],"title":"Webaholic-Reminder","type":"project"},{"authors":null,"categories":null,"content":" Google Patents Scraper (1) Automatically download all PDF files of searching results \u0026 their patent families.  (2) Generate an overview report of searching results.  Table of contents  Application Demo Introduction Built With Getting Started Acknowledgments  Application Demo Google Patents Scraper – Demo (YouTube)  Introduction This application scrape Google Patents by two steps:\n Set Proxy (Optional) Search \u0026amp; Download Patents  Set Proxy (Optional)  Set proxy to avoid current ip blocked by Google Patents  Search \u0026amp; Download Patents  Select an output directory to store downloaded/generated files Search whatever you like (search terms' format same as Google Patents) Download PDF files of searching results \u0026amp; their patent families  PDF files and auto-generated overview.md will then be stored in selected directory\nFile Structure of Output Directory  ├── PDFs │ ├── CN104321947A.pdf │ ├── ... │ └── readme.txt ├── Family_PDFs │ ├── CN104321947A's\\ Family │ │ ├── EP2850716B1.pdf │ │ ├── ... │ │ └── readme.txt │ ├── ... │ └── ... └── overview.md   Output directory of demo located at Demo_outdir overview.md represents the summary of completed searching  Built With Modules besides python built-ins\n Web Scarping - Selenium / Beautiful Soup / requests GUI framework - PyQt5 Others - fake-useragent / tqdm  Getting Started Prerequisites  Download a ChromeDriver which correspond with your Chrome version Replace the one in src/resources  Installation  Clone the repo  git clone https://github.com/wenyalintw/Google-Patents-Scraper.git   Install required modules listed in requirements.txt  pip install -r /path/to/requirements.txt   Ready to go  cd src python main.py  Acknowledgments  Checking process of proxies modified from ApsOps's repo search.png licensed under \"CC BY 3.0\" downloaded from ICONFINDER  ","date":1565481600,"expirydate":-62135596800,"kind":"page","lang":"zh-hant","lastmod":1565481600,"objectID":"1dfa09010c10bbab6eb93a62ab5aa3c6","permalink":"https://wenyalintw.github.io/zh-hant/project/google-patents-scraper/","publishdate":"2019-08-11T00:00:00Z","relpermalink":"/zh-hant/project/google-patents-scraper/","section":"project","summary":"專利PDF檔下載器。自動下載Google  Patents搜尋結果之專利與其專利家族的PDF檔。","tags":["Patent","Scrapping","Python","Qt"],"title":"Google-Patents-Scraper Google","type":"project"},{"authors":null,"categories":null,"content":" Level-Set Visualizer Visualize image segmentation based on level set method.  Table of contents  Application Demo Introduction Built With Installation Acknowledgments  Application Demo Level-Set Visualizer – Demo (YouTube)  Introduction This application perform image segmentation by following steps:\n Load Image \u0026amp; Start Level-Set Mode Preprocessing Initial Contour Start Evolution  Preprocessing  Edge detection by Anisotropic Diffusion, Gaussian Gradient, Sigmoid Scaling Control over some edge detection parameters  Initial Contour  Done by Fast Marching, support multiple bubbles  Start Evolution  Support media-like control (play/pause/step/rewind) \u0026amp; anchor iteration Control over 3 parameters based on Geodesic Active Contour (GAC)  Built With  ITK 4.12 - Image Processing Algorithms (w/ module ITKVtkGlue) VTK 8.2 - Image Display Qt 5.6 - GUI framework  Installation Before running the following command, modify QT_HOME, ITK_DIR, and VTK_DIR in CMakeLists.txt\n$ mkdir build $ cd build $ cmake ../src $ make -j4  Acknowledgments  This application is inspired by ITK-SNAP. Processing pipeline \u0026amp; test.png modified from ITK GAC Example heart.png modified from ICONFINDER  ","date":1562544000,"expirydate":-62135596800,"kind":"page","lang":"zh-hant","lastmod":1562544000,"objectID":"6e570de141c80a3ed8ac59b26db179a1","permalink":"https://wenyalintw.github.io/zh-hant/project/level-set-visualizer/","publishdate":"2019-07-08T00:00:00Z","relpermalink":"/zh-hant/project/level-set-visualizer/","section":"project","summary":"水平集影像分割法之視覺化操作應用程式。","tags":["Dicom","Image Processing","CPP","Qt"],"title":"Level-Set-Visualizer","type":"project"},{"authors":null,"categories":null,"content":" 簡易醫學影像GUI (Dicom Viewer) 能顯示 2D/3D Dicom影像的應用\n本project旨在利用python+Qt製作簡易的醫學影像GUI，提供一個平台，能在上面使用python開發測試各式影像處理功能，尤其是針對3D之Dicom Stack！\n先看兩段Demo吧 2D Image Processing  3D Image Processing  執行畫面 執行程式會打開Main Window，左上角的選單有2D processing和3D processing兩個子選項，其中後者embed有3D volume reconstruction功能\nMain Window \n2D processing 內含功能\n Load Image (含*.dcm) Save Image Convert to gray scale Restore Thresholding Region Growing Morthology (Dilation, Erosion, Opening, Closing) Edge Detection (Laplacian, Sobel, Perwitt, Frei \u0026amp; Chen) Drawing   3D processing 內含功能\n Load DICOM stack Save slice (axial, sagittal, coronal) Colormap transform Slider scrolling Mouse hovering/clicking Show DICOM info Show slice index coordinate 3D volume reconstruction   3D volume reconstruction \n\nFuture Extension  加入數據分析功能 導入一些醫學知識，讓軟體有一些初步的分析功能（如有沒有骨折、腫瘤等等） 3D reconstruction改善 更新volume重建算法，提升計算速度與還原度 3D image processing 加入對3D voxel影像進行更複雜的影像處理功能 Make it distributable 包裝成release版本，成為可轉散發軟體。希望能支援跨平台運作（window、macOS）  How to use it? Project root will be /src, just clone it and run mainwindow.py.\nStrictly follow the package version in requirements.txt is not necessary.\nAcknowledgments  brain.png licensed under \"CC BY 3.0\" downloaded from ICONFINDER  3D volumn reconstruction modified from Howard Chen's Post  ","date":1548547200,"expirydate":-62135596800,"kind":"page","lang":"zh-hant","lastmod":1548547200,"objectID":"0bebc4b7c342ad63bdb50f49c4711fa7","permalink":"https://wenyalintw.github.io/zh-hant/project/dicom-viewer/","publishdate":"2019-01-27T00:00:00Z","relpermalink":"/zh-hant/project/dicom-viewer/","section":"project","summary":"可顯示與編輯 2D/3D Dicom影像之應用程式。","tags":["Dicom","Image Processing","Python","Qt"],"title":"Dicom-Viewer","type":"project"},{"authors":null,"categories":null,"content":" 語音數字辨識專案 (Spoken-Digit Recognizer) 本project運用Keras建立Model，辨識使用者說的中/英數字，並使用GUI呈現。  先看段Demo吧！ Spoken-Digit Recognizer – Demo (YouTube)  Demo詳細介紹請點連結\n (Detailed) Demo  Dataset 所有使用data皆置於dataset.rar\n英文  pannous on github  連結內spokennumberspcm.tar含2400筆.wav檔，為15位不同人唸英文數字(0~9)的單數字音檔(160/人)  3位contributer每人自錄160筆，與上述相加共2880筆  中文  3位contributer每人自錄500筆，共1500筆  每筆data為中文數字數字0~9單數字音檔，每人一個數字錄50筆   目標  使用者對麥克風説一串中/英文數字(0~9)，程式能辨識使用者說了哪些數字  使用生成對抗網路GAN來生成音檔，即讓程式產出數字0~9的音檔  Implementation 對目標1，先將包含多數字的音檔分割，再使用不同種model來辨識，詳細介紹請點連結\n (Detailed) Split Audio (Detailed) Spectrogram + CNN (Detailed) MFCC + RNN  對目標2，使用inverse-STFT方式，詳細介紹請點連結\n (Detailed) GAN  問題討論 1. 聲紋影響 - 一個沒有經過我們model訓練過的人聲，若進行辨識測驗時的平均正確率會較低 - 我們認為這和聲紋息息相關，也就是同樣的字由不同人發聲的訊號頻譜存在差異  2. 中/英文 - 我們初期是以英文數字為輸入音訊，後期則發現英文其實在發音上相較中文有更多的變化性，如某些子音的發音屬於清音，會較容易被誤判為靜音 - 英文對於發音並沒有制式的音調規則，例如有些字會因語氣不同而音調不同，這導致我們model的辨識正確率並不理想 - 後來我們選擇嘗試中文，由於中文絕大多數發音是濁音，且抑揚頓挫已有明確定義，因此訓練出的model辨識正確率果然如我們預期，有明顯的提升  Contributors WenYa Lin、ChungYuan Hsu、JauhHsiang Lan\n","date":1548547200,"expirydate":-62135596800,"kind":"page","lang":"zh-hant","lastmod":1548547200,"objectID":"2f5b9a454cd171ac30dcb17b51ce6b1e","permalink":"https://wenyalintw.github.io/zh-hant/project/spoken-digit-recognizer/","publishdate":"2019-01-27T00:00:00Z","relpermalink":"/zh-hant/project/spoken-digit-recognizer/","section":"project","summary":"可辨識口說中英數字之ML模型Demo。","tags":["Machine Learning","Keras","Digital Speech Processing","Python","Qt"],"title":"Spoken-Digit Recognizer","type":"project"}]